# Your Solution


apiVersion: apps/v1
kind: Deployment
metadata:
  name: book-catalog
spec:
  replicas: 1
  selector:
    matchLabels:
      app: book-catalog
  template:
    metadata:
      labels:
        app: book-catalog
    spec:
      containers: 
      - name: book-catalog
        image: sit722s223763978part3.azurecr.io/book-catalog
        imagePullPolicy: IfNotPresent
        env:
        - name: PORT
          value: "4000"
        - name: DATABASE_URL
          value: "postgresql://db_9aib_user:YRAJEVBpQPr8p3KPrtq3gev3qjNOV1qo@dpg-cs0402rtq21c739a45fg-a.singapore-postgres.render.com/db_9aib"
---
apiVersion: v1
kind: Service
metadata:
  name: book-catalog
spec:
  selector:
    app: book-catalog
  type: LoadBalancer
  ports:
    - protocol: TCP
      port: 80
      targetPort: 4000

---

# Write Kubernetes Deployment Script

apiVersion: apps/v1
kind: Deployment
metadata:
  name: inventory-management
spec:
  replicas: 1
  selector:
    matchLabels:
      app: inventory-management
  template:
    metadata:
      labels:
        app: inventory-management
    spec:
      containers: 
      - name: inventory-management
        image: sit722s223763978part3.azurecr.io/inventory-management
        imagePullPolicy: IfNotPresent
        env:
        - name: PORT
          value: "4001"
        - name: DATABASE_URL
          value: "postgresql://db_9aib_user:YRAJEVBpQPr8p3KPrtq3gev3qjNOV1qo@dpg-cs0402rtq21c739a45fg-a.singapore-postgres.render.com/db_9aib"
---
apiVersion: v1
kind: Service
metadata:
  name: inventory-management
spec:
  selector:
    app: inventory-management
  type: LoadBalancer
  ports:
    - protocol: TCP
      port: 80
      targetPort: 4001